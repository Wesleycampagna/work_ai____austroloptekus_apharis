( x ) determinar heuristica  
( x ) projetar heuristica
( x ) simular uma matriz 
( x ) ler a matriz de um arquivo
(   ) criar calculo de fitness >>> punir revisores que ultrapassa o limite, calcular convergencia para saber se para
( x ) criar classe randomica
( x ) realizar seleção
( x ) realizar crossover
( x ) realizar mutação 
( x ) fazer funcionar o alg genético
( # ) testar 3 casos diferentes
( x ) matplot do fitness médio
( x ) matplot do maior fitness
( x ) condição de 10x
( x ) matplot para as 10x
( +-) escrever em um arquivo de saida (saida-genetico.txt) >>>> Falta so acoplar ao projeto
( x ) converter de volta binario
( x ) fitness.png
( x ) gráfico com 2 linhas, uma da melhor solução, outra da média (10 repetições)
( x ) Também deve ser mensurado o tempo de execuçao e o numero de iteracoes
levado ate a convergencia
(   ) Fazer entrada por parametro para 3 ordens diferentes de parametros 

# - anulado
x - feito
+- - +-

obs: arquivo de entrada inputpath = ''      


1- 3 combinações da parametros diferentes (entrada ou taxa de mutacao, crossover... ?)

2- grafico plotado certo?

3- mensurar tempo de execucao

4- quem da populacao vai ser jogado na saida genetico

5- prova matematica

6- aplicar algoritmo genetico direto? - Fitness deve ser a única representação de melhor estado? Desse modo a condição de parada será maxgen com as 10 iterações?

7- várias entradas

----------------------------------------------------------------------------------------------------------------------

1- matplot do maior fitness

2- se aproximar do maximo possivel

3- condição de parada -> agrupar 10 gerações e fazer as próximas 10 gerações e comaparar se convergiu muito, se sim para, senão continua (em 5 artigos com 4 revisores -> 1/x da multiplicação deles)

4- representação matematica -> somatoria dos melhores revisores para cada artigo

5- mudar crossover

6- explicar mutação

7- argv e args 
